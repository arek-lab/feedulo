.dashboard-container {
  margin-top: 4rem;
  height: calc(100vh - 4rem); 
  overflow: hidden; 
  background: 
   radial-gradient(ellipse at 20% 80%, rgba(240, 240, 245, 0.4) 0%, transparent 50%),
   radial-gradient(ellipse at 80% 20%, rgba(245, 245, 250, 0.3) 0%, transparent 50%),
   radial-gradient(ellipse at 40% 40%, rgba(235, 235, 240, 0.2) 0%, transparent 50%),
   linear-gradient(135deg, #f8f8fa 0%, #f0f0f5 50%, #f5f5f8 100%);
}
.sidebar {
  height: 100%;
  overflow-y: auto;
}
body.no-app-home {
  height: 100vh;
  overflow: hidden;
}
.form-control {
  background-color: inherit;
  color: inherit;
}
input,
select {
  border: none;
}
input[type="text"]:not(:focus),
input[type="number"]:not(:focus),
select:not(:focus) {
  border-top: 0.8px solid transparent;
  border-bottom: 0.8px solid #fff;
  border-radius: 0;
}
textarea {
  border: 0.8px solid #fff;
}
input[type="text"]:focus,
input[type="number"]:focus,
textarea:focus,
select:focus {
  box-shadow: none;
  outline: none;
  border: 0.8px solid #fff;
}
input[type="text"]::-webkit-input-placeholder,
input[type="number"]::-webkit-input-placeholder,
select.ng-invalid {
  color: var(--color-light);
  font-size: smaller;
}
select {
  background: inherit;
  color: inherit;
}
option {
  background: #000;
  color: inherit;
}
input:-moz-placeholder {
  color: var(--color-light);
  font-size: smaller;
}
svg {
  width: 1.5rem;
  height: 1.5rem;
  cursor: pointer;
}
svg.bin {
  width: 1rem;
  height: 1rem;
}
input[type="range"]::-webkit-slider-thumb {
  background-color: rgb(158, 234, 249);
}
input[type="range"]:focus::-webkit-slider-thumb {
  outline: none;
  box-shadow: none;
}
.range,
.option {
  width: 30rem;
}
.rainbow-box {
  background: linear-gradient(
    90deg,
    rgba(47, 201, 226, 1) 0%,
    rgba(79, 220, 74, 1) 25%,
    rgba(255, 170, 0, 1) 50%,
    rgba(255, 140, 0) 75%,
    rgba(255, 0, 0, 1) 100%
  );
  height: 4rem;
  width: 100%;
  -webkit-background-clip: text;
  background-clip: text;
}
.rainbow-box div {
  margin: 0.1rem;
  display: flex;
  align-items: center;
  justify-content: center;
  -webkit-text-fill-color: transparent;
  cursor: pointer;
  border: 3px solid transparent;
  border-radius: 5px;
  transition: border 0.2s;
}
.rainbow-box div label {
  text-align: center;
}
.rainbow-box div:hover {
  backdrop-filter: blur(4px);
}
input[type="radio"] {
  display: none;
}
.rainbow-box div:nth-child(1):hover,
.rainbow-box div:nth-child(1):has(input[type="radio"]:checked) {
  border-color: rgba(47, 201, 226, 0.7);
  -webkit-text-fill-color: #fff;
}
.rainbow-box div:nth-child(2):hover,
.rainbow-box div:nth-child(2):has(input[type="radio"]:checked) {
  border-color: rgba(79, 220, 74, 0.7);
  -webkit-text-fill-color: #fff;
}
.rainbow-box div:nth-child(3):hover,
.rainbow-box div:nth-child(3):has(input[type="radio"]:checked) {
  border-color: rgba(255, 170, 0, 0.7);
  -webkit-text-fill-color: #fff;
}
.rainbow-box div:nth-child(4):hover,
.rainbow-box div:nth-child(4):has(input[type="radio"]:checked) {
  border-color: rgba(255, 126, 0, 0.7);
  -webkit-text-fill-color: #fff;
}
.rainbow-box div:nth-child(5):hover,
.rainbow-box div:nth-child(5):has(input[type="radio"]:checked) {
  border-color: rgba(255, 0, 0, 0.7);
  -webkit-text-fill-color: #fff;
}
.form-check-input:checked,
.form-check-input:focus {
  box-shadow: none;
}
.form-switch .form-check-input:checked {
  background-color: rgb(158, 234, 249);
  border-color: rgb(158, 234, 249);
  border: none;
  background-image: url("data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='-4 -4 8 8'%3e%3ccircle r='3' fill='rgba(255,255,255,1.0)'/></svg>");
}
.form-switch .form-check-input:not(:checked) {
  background-color: rgb(255, 255, 255, 1);
  border-color: rgb(255, 255, 255, 1);
  border: none;
  background-image: url("data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='-4 -4 8 8'%3e%3ccircle r='3' fill='rgba(158, 234, 249)'/></svg>");
}

input:-webkit-autofill,
input:-webkit-autofill:focus {
  transition: background-color 600000s 0s, color 600000s 0s;
}
.numberOfWords label {
  border: 1px solid transparent;
  border-radius: 5px;
  width: 40%;
}
.numberOfWords:has(input[name="numberOfWords"]:checked) label {
  border: 1px solid #fff;
  border-radius: 5px;
}

.historical:has(.form-switch .form-check-input:not(:checked))
  input[type="range"],
.historical:has(.form-switch .form-check-input:not(:checked)) label.range {
  pointer-events: none;
  opacity: 0.3;
}
.alert {
  padding: 0.7rem;
  font-size: smaller;
}
